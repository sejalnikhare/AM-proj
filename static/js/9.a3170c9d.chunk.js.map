{"version":3,"sources":["api/API.js","features/app/users/add-edit/AddEditUser.js","features/app/users/user-list/UserList.js"],"names":["serverInstance","axios","create","baseURL","Input","styled","display","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","AddEditUser","props","open","setOpen","operation","user","setUser","loadUsers","classes","useState","firstname","lastname","occupation","dob","validate","setValidate","handleClose","handleChange","e","target","name","value","useEffect","length","descriptionElementRef","React","useRef","descriptionElement","current","focus","Dialog","onClose","scroll","DialogTitle","id","DialogContent","dividers","DialogContentText","ref","tabIndex","TextField","fullWidth","onChange","className","label","variant","error","helperText","FormControl","InputLabel","Select","labelId","MenuItem","Stack","component","noValidate","type","InputLabelProps","shrink","status","multiline","rows","bio","placeholder","htmlFor","accept","multiple","Button","profilepic","DialogActions","onClick","color","preventDefault","console","log","API","post","then","response","Swal","fire","catch","err","put","_id","editIcon","marginRight","cursor","deleteIcon","UserList","data","setData","setOperation","get","columns","options","filter","sort","customBodyRenderLite","dataIndex","i","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","result","delete","filterType"],"mappings":"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","file":"static/js/9.a3170c9d.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst serverInstance = axios.create({\r\n    baseURL: \"http://127.0.0.1:2497/api/v1\"\r\n});\r\nexport default serverInstance;","import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Stack from '@mui/material/Stack';\r\nimport Swal from 'sweetalert2';\r\nimport API from '../../../../api/API';\r\n// import TextareaAutosize from '@mui/material/TextareaAutosize';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst Input = styled('input')({\r\n    display: 'none',\r\n});\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst AddEditUser = props => {\r\n\r\n    // const [value, setValue] = React.useState(new Date());\r\n    const { open, setOpen, operation, user, setUser, loadUsers } = props;\r\n\r\n    const classes = useStyles();\r\n    const [validate, setValidate] = useState({\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        occupation: \"\",\r\n        dob: \"\",\r\n    })\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const validateForm = () => {\r\n\r\n        //name \r\n        if (user.firstname.length > 3) {\r\n            setValidate({ ...validate, name: false })\r\n        } else {\r\n            setValidate({ ...validate, name: true })\r\n\r\n        }\r\n\r\n        if (user.lastname.length > 4) {\r\n            setValidate({ ...validate, name: false })\r\n        } else {\r\n            setValidate({ ...validate, name: true })\r\n\r\n        }\r\n\r\n        //name\r\n        // occupation\r\n        //    if(user.occupation  )\r\n        // occupation\r\n\r\n\r\n    }\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        setUser({ ...user, [name]: value });\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        validateForm();\r\n    }, [user])\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        console.log(\"User: \", user);\r\n        if (operation === \"add\")\r\n            API.post(`/user`, user)\r\n                .then(response => {\r\n                    setOpen(false);\r\n                    Swal.fire(\"User created\", \"\", \"success\");\r\n                    loadUsers();\r\n\r\n                })\r\n                .catch(err => {\r\n                    Swal.fire(\"User not created\", \"please try again\", \"error\");\r\n\r\n\r\n                })\r\n\r\n        else if (operation === \"edit\")\r\n            API.put(`/user/${user._id}`, {\r\n                firstname: user.firstname,\r\n                lastname: user.lastname,\r\n                occupation: user.occupation,\r\n                dob: user.dob,\r\n                status: user.status,\r\n                bio: user.bio,\r\n                profilepic: user.profilepic,\r\n            }).then(response => {\r\n                setOpen(false);\r\n                loadUsers();\r\n\r\n                Swal.fire(\"User updated\", \"\", \"success\");\r\n\r\n            })\r\n                .catch(err => {\r\n                    Swal.fire(\"User not updated\", \"please try again\", \"error\");\r\n\r\n                })\r\n\r\n        else\r\n            Swal.fire(\"Something wrong\", \"please try again later\", \"error\")\r\n\r\n    };//handleSubmit\r\n\r\n\r\n    const descriptionElementRef = React.useRef(null);\r\n    React.useEffect(() => {\r\n        if (open) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                scroll='paper'\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n                aria-describedby=\"scroll-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"scroll-dialog-title\"> {operation === \"edit\" ? \"Update\" : \"Add\"} Customers</DialogTitle>\r\n                <DialogContent dividers={true}>\r\n                    <DialogContentText\r\n                        id=\"scroll-dialog-description\"\r\n                        ref={descriptionElementRef}\r\n                        tabIndex={-1}\r\n                    >\r\n                        <form>\r\n                            <TextField\r\n                                name=\"firstname\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                                value={user.firstname}\r\n                                id=\"outlined-basic\"\r\n                                className={classes.formControl}\r\n                                label=\"First Name\"\r\n                                variant=\"outlined\"\r\n                                error={validate.name}\r\n                                helperText={validate.firstname ? \"First Name is required\" : \"\"}\r\n                            />\r\n                            <TextField\r\n                                name=\"lastname\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                                value={user.lastname}\r\n                                // value=\"\"\r\n                                id=\"outlined-basic\"\r\n                                className={classes.formControl}\r\n                                label=\"Last Name\"\r\n                                variant=\"outlined\"\r\n                                error={validate.name}\r\n                                helperText={validate.lastname ? \"Last Name is required\" : \"\"}\r\n                            />\r\n\r\n                            <FormControl variant=\"outlined\" fullWidth className={classes.formControl}>\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">occupation</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    id=\"demo-simple-select-outlined\"\r\n                                    value={user.occupation}\r\n                                    onChange={handleChange}\r\n                                    label=\"Occupation\"\r\n                                    name=\"occupation\"\r\n                                >\r\n                                    <MenuItem value=\"employed\">Employed</MenuItem>\r\n                                    <MenuItem value=\"business\">Business</MenuItem>\r\n                                    <MenuItem value=\"student\">Student</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n\r\n                            <Stack component=\"form\" noValidate spacing={3}>\r\n                                <TextField\r\n                                    name=\"dob\"\r\n                                    id=\"date\"\r\n                                    label=\"DOB\"\r\n                                    type=\"date\"\r\n                                    value={user.dob}\r\n                                    onChange={handleChange}\r\n                                    // sx={{ width: 10 }}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Stack>\r\n                            <FormControl fullWidth variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">Status</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    id=\"demo-simple-select-outlined\"\r\n                                    value={user.status}\r\n                                    onChange={handleChange}\r\n                                    name=\"status\"\r\n                                    label=\"Status\"\r\n                                >\r\n                                    <MenuItem value={1}>Active</MenuItem>\r\n                                    <MenuItem value={0}>Inactive</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n\r\n\r\n                            <TextField\r\n                                name=\"bio\"\r\n                                id=\"outlined-multiline-static\"\r\n                                label=\"BIO\"\r\n                                multiline\r\n                                rows={5}\r\n                                value={user.bio}\r\n                                placeholder='BIO'\r\n                                onChange={handleChange}\r\n                            />\r\n\r\n\r\n                             <label htmlFor=\"contained-button-file\">\r\n                                <Input accept=\"image/*\" id=\"contained-button-file\" \r\n                                onChange={handleChange}\r\n                                name=\"profilepic\"\r\n                                //  value={user.profilepic}\r\n                                 multiple type=\"file\"\r\n                                  />\r\n                                <Button variant=\"contained\"\r\n                                    component=\"span\"\r\n                                    value={user.profilepic}\r\n                                >\r\n                                    Upload\r\n                                </Button>\r\n                            </label> \r\n\r\n                        </form>\r\n\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel </Button>\r\n                    <Button variant=\"contained\" onClick={handleSubmit} color=\"primary\">\r\n                        {operation === \"edit\" ? \"Update\" : \"Add\"}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AddEditUser;\r\n","import React, { useState, useEffect } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport API from '../../../../api/API';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\nimport AddEditUser from '../add-edit/AddEditUser';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    editIcon: {\r\n        marginRight: 5,\r\n        color: '#3f51b5',\r\n        cursor: 'pointer'\r\n    },\r\n    deleteIcon: {\r\n        color: 'red',\r\n        cursor: 'pointer'\r\n\r\n    },\r\n}));\r\nconst UserList = () => {\r\n    const classes = useStyles();\r\n    const [data, setData] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [operation, setOperation] = React.useState(\"add\");\r\n    const [user, setUser] = useState({\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        occupation: 'employed',\r\n        dob: \"\",\r\n        status: 1,\r\n        bio: \"\",\r\n        profilepic: \"\",\r\n    });\r\n\r\n\r\n    const loadUsers = () => {\r\n        API.get(\"/user\")\r\n            .then(response => {\r\n                setData(response.data.data);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        loadUsers();\r\n    }, []);\r\n\r\n\r\n    const handleEdit = (i) => {\r\n        // alert(data[i].name);\r\n        setUser(data[i]);\r\n        setOperation(\"edit\");\r\n        setOpen(true);\r\n\r\n    }//handleEdit\r\n\r\n    const handleDelete = (i) => {\r\n\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: 'You will not be able to recover this record!',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes, delete it!',\r\n            cancelButtonText: 'No, keep it'\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                API.delete(`/user/${data[i]._id}`)\r\n                    .then(response => {\r\n                        Swal.fire(\r\n                            'Deleted!',\r\n                            'The customer has been deleted.',\r\n                            'success'\r\n                        );\r\n                        loadUsers();\r\n                    })\r\n                    .catch(err => {\r\n                        Swal.fire(\r\n                            'Not Deleted!',\r\n                            'The customer has not been deleted.',\r\n                            'error'\r\n                        )\r\n                    })\r\n            }\r\n        })\r\n\r\n\r\n    };//handleDelete\r\n\r\n\r\n    const resetUser = () => {\r\n        setUser({\r\n            firstname: '',\r\n            lastname: '',\r\n            occupation: 'employed',\r\n            dob: '',\r\n            status: 1,\r\n            bio: '',\r\n            profilepic: ''\r\n        })\r\n    }\r\n\r\n    const handleAdd = () => {\r\n        resetUser();\r\n        setOperation(\"add\");\r\n\r\n        setOpen(true);\r\n    };//handleAdd\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            name: \"firstname\",\r\n            label: \"First Name\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n\r\n        {\r\n            name: \"lastname\",\r\n            label: \"Last Name\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n\r\n        {\r\n            name: \"occupation\",\r\n            label: \"Occupation\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n\r\n        {\r\n            name: \"status\",\r\n            label: \"Status\",\r\n            options: {\r\n                filter: true,\r\n                sort: false,\r\n                customBodyRenderLite: (dataIndex) => {\r\n\r\n                    return data[dataIndex].status === 1 ? \"Active\" : \"Inactive\";\r\n                }\r\n            }\r\n        },\r\n        {\r\n            name: \"bio\",\r\n            label: \"Bio\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"profilepic\",\r\n            label: \"Profile Picture / Avatar\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n\r\n        {\r\n            name: \"action\",\r\n            label: \"Action\",\r\n            options: {\r\n                filter: true,\r\n                sort: false,\r\n                customBodyRenderLite: (dataIndex) => {\r\n\r\n                    return <div>\r\n                        <span className={classes.editIcon}\r\n                            onClick={() => handleEdit(dataIndex)}>\r\n                            <EditIcon />\r\n                        </span>\r\n                        <span className={classes.deleteIcon}\r\n                            onClick={() => handleDelete(dataIndex)}>\r\n                            <DeleteIcon />\r\n                        </span>\r\n                    </div>\r\n                }\r\n            }\r\n        },\r\n    ];\r\n\r\n    // const data = [\r\n    //     { name: \"Joe James\", company: \"AM\", city: \"Yonkers\", state: \"NY\" },\r\n    //     { name: \"John Walsh\", company: \"AM\", city: \"Hartford\", state: \"CT\" },\r\n    //     { name: \"Bob Herm\", company: \"AM\", city: \"Tampa\", state: \"FL\" },\r\n    //     { name: \"James Houston\", company: \"AM\", city: \"Dallas\", state: \"TX\" },\r\n    // ];\r\n\r\n    const options = {\r\n        filterType: 'checkbox',\r\n    };\r\n\r\n\r\n    return (<>\r\n\r\n        <AddEditUser\r\n            open={open}\r\n            setOpen={setOpen}\r\n            operation={operation}\r\n            user={user}\r\n            setUser={setUser}\r\n            loadUsers={loadUsers}\r\n        />\r\n\r\n        <h1>Customers LIst </h1>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleAdd}>\r\n            Add Customers\r\n        </Button>\r\n\r\n\r\n        <MUIDataTable\r\n            title={\"Customers List\"}\r\n            data={data}\r\n            columns={columns}\r\n            options={options}\r\n        />\r\n\r\n    </>);\r\n}\r\n\r\nexport default UserList;"],"sourceRoot":""}